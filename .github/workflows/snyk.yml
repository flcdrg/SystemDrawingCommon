name: Example workflow for dotNET using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      # https://github.com/GitHubSecurityLab/actions-permissions/tree/main/monitor
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        # with:
        #   config: ${{ vars.PERMISSIONS_CONFIG }}

      - uses: actions/checkout@v3

      - name: Setup DotNet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: "Build"
        shell: bash
        run: |
          dotnet build --configuration Release
          ls -al

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --file=SystemDrawingCommon.sln

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
